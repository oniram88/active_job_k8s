#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
set -vx

bundle install

# Prepariamo l'applicazione esempio
rm -fr spec/dummy
bundle exec rails new spec/dummy --skip-git --skip-javascript --skip-hotwire --skip-jbuilder --skip-test --skip-bootsnap --force
echo '
class HelloWorldJob < ApplicationJob
  queue_as :default

  def perform(*args)
    Rails.logger.debug "Hello World"
  end

  def manifest
    YAML.safe_load(
      <<~MANIFEST
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: scheduled-job-name
            namespace: default
          spec:
            template:
              spec:
                restartPolicy: Never
                containers:
                  - name: app-job
                    image: image_of_the_rails_application
                    imagePullPolicy: IfNotPresent

    MANIFEST
    )
  end
end
' >spec/dummy/app/jobs/hello_world_job.rb

echo 'FROM ruby:3.0.4-alpine3.16

RUN apk update \
    && apk upgrade \
    && apk add --update alpine-conf bash tzdata build-base curl-dev curl git yaml-dev zlib-dev

RUN gem install bundler:2.3.7

# throw errors if Gemfile has been modified since Gemfile.lock
RUN bundle config --global frozen 1
RUN bundle config set --local without "development test"
WORKDIR /usr/src/app

COPY Gemfile Gemfile.lock ./
RUN bundle install

COPY . .

CMD ["bundle exec rails s -b 0.0.0.0 -p 3000"]' >spec/dummy/Dockerfile

docker build -t activejobk8s:0.1.0 spec/dummy/.
kind load docker-image activejobk8s:0.1.0

kubectl config set-context kind-kind
kubectl apply -f - <<EOF
apiVersion: v1
kind: Pod
metadata:
  name: test-activejobk8s
  namespace: default
spec:
  containers:
  - name: app
    image: activejobk8s:0.1.0
    imagePullPolicy: Never
EOF


